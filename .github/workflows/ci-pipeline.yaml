name: SQL backend unit tests

on:
  push:

env:
  DB_USER: root
  DB_PASSWORD: root
  MATCHA_DB: sekesidb
  MATCHA_TEST_DB: sekesitest
  TEST: 'true'

jobs:
  run_unittests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '16.13.2'
      # - uses: mirromutth/mysql-action@v1.1
      #   with:
      #     host port: 8080 # Optional, default value is 3306. The port of host
      #     container port: 3307 # Optional, default value is 3306. The port of container
      #     character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
      #     collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
      #     mysql database: 'sekesidb' # Optional, default value is "test". The specified database which will be create
      #     mysql user: 'sammy' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
      #     mysql password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          sudo mysql -e 'CREATE DATABASE ${{ env.MATCHA_DB }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          sudo mysql -e 'CREATE DATABASE ${{ env.MATCHA_TEST_DB }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          sudo mysql -e "CREATE USER 'sammy'@'localhost' IDENTIFIED BY 'password';" -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

          sudo mysql -e "GRANT CREATE, ALTER, DROP, INSERT, UPDATE, DELETE, SELECT, REFERENCES, RELOAD on *.* TO 'sammy'@'localhost' WITH GRANT OPTION;"  -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          sudo mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} ${{ env.DB_DATABASE }} < SQL_Server/sql_scripts/define_db.sql
      - name: Install dependencies
        run: |
          cd SQL_Server
          npm ci
      - name: Run all unittests
        run: |
          cd SQL_Server
          npm test
